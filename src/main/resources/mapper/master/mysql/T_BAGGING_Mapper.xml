<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nssol.dao.master.TBaggingDao">
	<resultMap id="BaseResultMap" type="com.nssol.model.T_Bagging">
		<id column="orderNo" jdbcType="VARCHAR" property="orderNo" />
		<result column="ProductOrderNo" jdbcType="VARCHAR" property="productOrderNo" />
		<result column="SKUCode" jdbcType="VARCHAR" property="skuCode" />
		<result column="SampleCode" jdbcType="VARCHAR" property="sampleCode" />
		<result column="Color" jdbcType="VARCHAR" property="color" />
		<result column="Size" jdbcType="VARCHAR" property="size" />
		<result column="BaggingAddress" jdbcType="VARCHAR" property="baggingAddress" />
		<result column="CreateTimeStart" jdbcType="VARCHAR" property="createTimeStart" />
		<result column="CreateTimeEnd" jdbcType="VARCHAR" property="createTimeEnd" />
		<result column="BusinessUnit" jdbcType="VARCHAR" property="businessUnit" />
		<result column="ItemBrand" jdbcType="VARCHAR" property="itemBrand" />
		<result column="OrderQty_Pcs" jdbcType="DECIMAL" property="orderQty_Pcs" />
		<result column="ScanNum" jdbcType="VARCHAR" property="scanNum" />
		<result column="RecordCounts" jdbcType="VARCHAR" property="recordCounts" />
	</resultMap>
	
	<sql id="getBaggingCondition">
		<where>
			1=1
			 <if test="orderNo != null and orderNo != ''">
                 AND B.OrderNo LIKE CONCAT('%',#{orderNo},'%')
             </if>
           <if test="productOrderNo != null and productOrderNo != ''">
           AND   EXISTS (
					SELECT 
						O.ProductOrderNo
					FROM 
						T_DO_INFO O
 					WHERE O.OrderNo=B.OrderNo  
 					AND O.ProductOrderNo LIKE CONCAT('%',#{productOrderNo},'%')
 					)
            </if>
              <if test="skuCode != null and skuCode != ''">
                 AND B.SKUCode LIKE CONCAT('%',#{skuCode},'%')
             </if>
              <if test="sampleCode != null and sampleCode != ''">
                 AND B.SampleCode LIKE CONCAT('%',#{sampleCode},'%')
             </if>
              <if test="size != null and size != ''">
                 AND CONCAT(B.SizeCode,':',B.Size) LIKE CONCAT('%',#{size},'%')
             </if>
              <if test="color != null and color != ''">
                 AND CONCAT(B.ColorCode,':',B.Color) LIKE CONCAT('%',#{color},'%')
             </if>
              <if test="createTimeStart != null and createTimeStart != ''">
                 AND DATE_FORMAT(B.CreateTime,"%Y%m%d") >= #{createTimeStart}
             </if>
           
              <if test="baggingAddress != null and baggingAddress != ''">
                 AND B.BaggingAddress = #{baggingAddress}
             </if>
            
                <if test="createTimeEnd != null and createTimeEnd != ''">
                 AND  #{createTimeEnd} >= DATE_FORMAT(B.CreateTime,"%Y%m%d")
             </if>
               <if test="scanTime != null">
                 AND DATE_FORMAT(B.scanTime,"%Y%m%d") = DATE_FORMAT(NOW(),"%Y%m%d")
             </if>
		</where>
	</sql>
	
	<select id="selectByCriteria" parameterType="com.nssol.model.T_Bagging"
		resultMap="BaseResultMap">
		SELECT
			B.OrderNo,
			B.DetailNo,
			B.ColorCode,
			B.Color,
			B.SizeCode,
			B.Size,
			B.PatternDimensionCode,
			B.SampleCode,
			P.ItemBrand,
			B.ItemCode,
			B.Item,
			B.SKUCode,
			B.SKUCodeForShipping,
			B.BaggingAddress,
			P.BusinessUnit,
			B.ScanNum,
			N.OrderQty_Pcs,
			(SELECT DATE_FORMAT(MIN(C.CreateTime),"%Y-%m-%d %H:%i:%S")
			 FROM T_Bagging C
			 WHERE C.SkuCode=B.SkuCode AND C.OrderNo=B.OrderNo) CreateTimeStart,
			(SELECT DATE_FORMAT(MAX(C.ModifyTime),"%Y-%m-%d %H:%i:%S")
			FROM T_Bagging C
			WHERE C.SkuCode=B.SkuCode AND C.OrderNo=B.OrderNo)	 CreateTimeEnd
			FROM
			T_Bagging B
		INNER JOIN  
			T_PO_INFO P
		on P.OrderNo=B.OrderNo
		INNER JOIN  
			T_ORDER_Detail N
		on N.OrderNo=B.OrderNo
		and N.SKUCode=B.SKUCode
		<include refid="getBaggingCondition"/>
		
	</select>
	
	<select id="selectIdBysku" parameterType="com.nssol.model.T_Bagging"
		resultMap="BaseResultMap">
		SELECT
		    B.DetailNo
		FROM 
			T_Bagging B
		<include refid="getBaggingCondition"/>
		limit 1
	</select>
	
	<select id="selectBagginglist" parameterType="com.nssol.model.T_Bagging"
		resultMap="BaseResultMap">
       SELECT * FROM (
		SELECT
		(SELECT group_concat(I.ProductOrderNo separator '/')
		FROM      T_DO_INFO I
		WHERE     I.OrderNo=B.OrderNo) ProductOrderNo,
			B.OrderNo,
			B.ColorCode,
			CONCAT(B.ColorCode,':',B.Color) Color,
			B.SizeCode,
		    CONCAT(B.SizeCode,':',B.Size) Size,
			B.PatternDimensionCode,
			B.SampleCode,
			B.ItemCode,
			B.Item,
			B.SKUCode,
			B.SKUCodeForShipping,
			P.BusinessUnit,
			N.OrderQty_Pcs,
			SUM(B.ScanNum) ScanNum
		FROM 
			T_Bagging B
		INNER JOIN  
			T_PO_INFO P
		on P.OrderNo=B.OrderNo
		INNER JOIN  
			T_ORDER_Detail N
		 on N.OrderNo=B.OrderNo
		and N.SKUCode=B.SKUCode
		<include refid="getBaggingCondition"/>
		
		group by
			B.OrderNo,
			B.ColorCode,
			B.Color,
			B.SizeCode,
			B.Size,
			B.PatternDimensionCode,
			B.SampleCode,
			B.ItemCode,
			B.Item,
			B.SKUCode,
			B.SKUCodeForShipping,
			N.OrderQty_Pcs,
			P.BusinessUnit
		 ) B
		order by B.OrderNo DESC
		limit #{startRecord},#{currentPageShowCounts}
		
	</select>
	
	<select id="selectTotBagginglist" parameterType="com.nssol.model.T_Bagging"
		resultMap="BaseResultMap">
     
		SELECT
		(SELECT group_concat(I.ProductOrderNo separator '/')
		FROM      T_DO_INFO I
		WHERE     I.OrderNo=B.OrderNo) ProductOrderNo,
			B.OrderNo,
			B.ColorCode,
            CONCAT(B.ColorCode,':',B.Color) Color,
			B.SizeCode,
            CONCAT(B.SizeCode,':',B.Size) Size,
			B.PatternDimensionCode,
			B.SampleCode,
			B.ItemCode,
			B.Item,
			B.SKUCode,
			B.SKUCodeForShipping,
			N.OrderQty_Pcs,
			P.BusinessUnit,
			SUM(B.ScanNum) ScanNum
		FROM 
			T_Bagging B
		INNER JOIN  
			T_PO_INFO P
		on P.OrderNo=B.OrderNo
		INNER JOIN  
			T_ORDER_Detail N
		 on N.OrderNo=B.OrderNo
		and N.SKUCode=B.SKUCode
		<include refid="getBaggingCondition"/>
		
		group by
			B.OrderNo,
			B.ColorCode,
			B.Color,
			B.SizeCode,
			B.Size,
			B.PatternDimensionCode,
			B.SampleCode,
			B.ItemCode,
			B.Item,
			B.SKUCode,
			B.SKUCodeForShipping,
			N.OrderQty_Pcs,
			P.BusinessUnit
	</select>
	
	<select id="selectBagginglistCount" parameterType="com.nssol.model.T_Bagging"
		resultMap="BaseResultMap">
       	SELECT
		  B.OrderNo,
		  B.SkuCode
		FROM 
			T_Bagging B
		INNER JOIN  
			T_PO_INFO P
		on P.OrderNo=B.OrderNo
		<include refid="getBaggingCondition"/>
		group by 
		    B.OrderNo,
		  B.SkuCode
	</select>

<insert id="insertBagging" parameterType="com.nssol.model.T_Bagging">
		
		insert into T_BAGGING (
			OrderNo,
			DetailNo,
			ColorCode,
			Color,
			SizeCode,
			Size,
			PatternDimensionCode,
			SampleCode,
			ItemCode,
			Item,
			SKUCode,
			SKUCodeForShipping,
			BaggingAddress,
			ScanTime,
			ScanNum,
			Creater,
			CreateTime
)
		select
			D.OrderNo,
			D.DetailNo,
			D.ColorCode,
			D.Color,
			D.SizeCode,
			D.Size,
			D.PatternDimensionCode,
			D.SampleCode,
			D.ItemCode,
			D.Item,
			D.SKUCode,
			D.SKUCodeForShipping,
			#{baggingAddress},
			#{scanTime},
			#{scanNum},
			#{creater},
			#{createTime}
		from 
			T_ORDER_DETAIL D
		where
		     D.OrderNo=#{orderNo}
    	 AND D.SKUCode =#{skuCode}
    	 limit 1
	</insert>

<update id="updateBagging" parameterType="com.nssol.model.T_Bagging">
		update T_BAGGING 
		set ScanNum=ScanNum+1,
		 Modifyer =#{creater},
		 ModifyTime =#{createTime},
		 DetailNo =#{detailNo}
		where
		     OrderNo =#{orderNo}
    	 AND SKUCode =#{skuCode}
    	 AND BaggingAddress =#{baggingAddress}
    	 AND DATE_FORMAT(ScanTime,"%Y%m%d") =DATE_FORMAT(#{scanTime},"%Y%m%d")
	</update>
</mapper>